syntax = "proto3";

option go_package = "github.com/lehoangvuvt/projectrol/common/protos";
package protos;

message EmptyRequest {}

message CreateUserRequest {
 string email = 1;
 string password = 2;
}

message CreateUserResponse {
    int32 id = 1;
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message UserSettings {
    int32 id = 1;
    string name = 2;
    string avatar = 3;
    string theme = 4;
    string phone_no = 5;
}

message User {
    int32 id = 1;
    string email = 2;
    UserSettings settings = 3;
    repeated WorkspaceRoleId workspaceRoleIdList = 4;
}

message Workspace {
    int32 id = 1;
    string nanoid = 2;
    string name = 3;
    string slug = 4;
}

message WorkspaceSettings {
    string logo = 1;
}

message CreateWorkspaceRequest {
    string name = 1;
    int32 ownerId = 2;
    string logo = 3;
}

message CreateWorkspaceResponse {
    string nanoid = 1;
}

message GetWorkspacesByUserIdRequest {
    int32 userId = 1;
}

message GetWorkspacesByUserIdResponse {
    repeated Workspace workspaces = 1;
}

message GetUserByIdRequest {
    int32 userId = 1;   
}

message CreateCalendarEventRequest {
    string title = 1;
	string description = 2;
	int32 duration = 3;
	int64 dtstart = 4;
    string type = 5;
    optional RecurringConfig recurring = 6;   
    int32 createdBy = 7;
    int32 workspaceId = 8;
}

message CreateCalendarEventResponse{
    int32 id = 1;
}

message RecurringConfig {
    string type = 1;
    int32 count = 2;
    int32 interval = 3; 
    optional ByWeekDayRule byweekdayRule = 4;
}

message ByWeekDayRule {
	int32 day = 1;
	int32 every = 2;
}

message Project {
    int32 id = 1;
    int32 workspace_id = 2;
    int32 created_by = 3;
    string name = 4;
    string slug = 5;
    string summary = 6;
    string description = 7;
    string dtstart = 8;
    string dtend = 9;
    string created_at = 10;
}

message ProjectDetails {
    Project project = 1;
    repeated int32 memberIds = 2; 
}

message CreateProjectRequest {
	int32 workspace_id = 1;
    int32 created_by = 2;
    string name = 3;
    string summary = 4;
    string description = 5;
	int64 dtstart = 6;
    int64 dtend = 7;
    bool is_private = 8;
}

message CreateProjectResponse {
    int32 id = 1;
}

message GetProjectsByWorkspaceIdRequest {
    int32 workspace_id = 1;
    int32 user_id = 2;
}

message GetProjectsByWorkspaceIdResponse {
    repeated Project projects = 1;
}

message GetProjectDetailsRequest {
    string project_slug = 2;
    int32 user_id = 3;
}

message GetProjectDetailsResponse {
    ProjectDetails details = 1;
}

message UserNotificationsSettings {
    int32 user_id = 1;
    bool is_via_inbox = 2;
    bool is_via_email = 3;
    string task_noti_settings = 4;
    string project_noti_settings = 5;
    string event_noti_settings = 6;
    int32 event_notice_before = 7;
}

message UpsertUserNotificationsSettingsRequest {
    UserNotificationsSettings settings = 1;
}

message UpsertUserNotificationsSettingsResponse {
    UserNotificationsSettings settings = 1;
}

message GetUserNotificationsSettingsRequest {
    int32 userId = 1;
}

message GetUserNotificationsSettingsResponse {
    UserNotificationsSettings settings = 1;
}

message Permission {
    int32 id = 1;
    string resource_tag = 2;
    string title = 3;
    string description = 4;
    bool can_read = 5;
    bool can_create = 6;
    bool can_update = 7;
    bool can_delete = 8;
}

message WorkspaceRole {
    int32 id = 1;
    int32 workspace_id = 2;
    string role_name = 3;
    repeated Permission permissions = 4;
}

message GetWorkspaceDetailsRequest {
    int32 id = 1;
}

message GetWorkspaceDetailsResponse {
    Workspace general_information = 1;
    WorkspaceSettings settings = 2;
}

message GetPermissionsResponse {
    repeated Permission permissions = 1;
}

message UpdateRolePermissionRequest {
    int32 role_id = 1;
    string resource_tag = 2;
    string action = 3; //can_read, can_update, can_create, can_delete //
    string update_type = 4; // remove, add //
}

message UpdateRolePermissionResponse {
    WorkspaceRole role = 1;
}

message GetWorkspaceRolesRequest {
    int32 id = 1;
}

message GetWorkspaceRolesResponse {
   repeated WorkspaceRole roles = 1;
}

message GetUserRoleInWorkspaceRequest {
    int32 user_id = 1;
    int32 workspace_id = 2;
}

message GetUserRoleInWorkspaceResponse {
    WorkspaceRole role = 1;
}

message GetRoleIdOfUserWorkspacesRequest {
    int32 userId = 1;
}

message WorkspaceRoleId {
    int32 workspaceId = 1;
    int32 roleId = 2;   
}

message GetRoleIdOfUserWorkspacesResponse {
   repeated WorkspaceRoleId workpaceRoleIdList = 1;
}

message CheckRoleValidForResourceRequest {
    int32 roleId = 1;
    string resourceTag = 2;
    string method = 3;
}

message CheckRoleValidForResourceResponse {
    bool isValid = 1;
}

message  CreateNewRoleRequest {
    int32 workspace_id = 1;
    string role_name = 2;
    repeated int32 permission_ids = 3;
}

message CreateNewRoleResponse {
   int32 id = 1;
}

message GetWorkspaceMembersRequest {
    int32 id = 1;
}

message WorkspaceMember {
    int32 id = 1;
    string email  = 2;
    string name = 3;
    string avatar = 4;
    string phone_no = 5;
    int32 role_id = 6;
}

message GetWorkspaceMembersResponse {
    repeated WorkspaceMember members = 1;
}

message CheckUserHasAccessToProjectRequest {
    int32 user_id = 1;
    string project_slug = 2;
}

message Task {
    string nanoid = 1;
    int32 project_id = 2;
    string title = 3;
    string description = 4;
    string status = 5;
    string label = 6;
    bool is_published = 7;    
    string created_at = 8;
}

message CreateTaskRequest {
    int32 user_id = 1;
    string project_slug = 2;
    string title = 3;
    string description = 4;
    string status = 5;
    string label = 6;
    int32 priority = 7;
    bool is_published = 8;
}

message CreateTaskResponse {
    string nanoid = 1;
}   

message GetProjectTasksRequest {
    int32 user_id = 1;
    string project_slug = 2;
}

message GetProjectTasksResponse {
    repeated Task tasks = 1;
}

message CreateProjectDocumentRequest {
    int32 user_id = 1;
    string project_slug = 2;
    string name = 3;
    string content = 4;
}

message CreateProjectDocumentResponse {
    string nanoid = 1;
}

message GetProjectDocumentsRequest {
    string project_slug = 1;
}

message ProjectDocument {
    int32 created_by = 1;
    int32 updated_by = 2;
    string nanoid = 3;
    string name = 4;
    string created_at = 5;
    optional string updated_at = 6;
}

message ProjectDocumentDetails {
    int32 created_by = 1;
    int32 updated_by = 2;
    string nanoid = 3;
    string name = 4;
    string content = 5;
    string created_at = 6;
    optional string updated_at = 7;
}

message GetProjectDocumentsResponse {
    repeated ProjectDocument documents = 1;
}

message GetProjectDocumentDetailsRequest {
    string nanoid = 1;
}

message GetProjectDocumentDetailsResponse {
    ProjectDocumentDetails details = 1;
}

message UpdateProjectDocumentDetailsRequest {
    string nanoid = 1;
    int32 updated_by = 2;
    string name = 3;
    string content = 4;
}

message UpdateProjectDocumentDetailsResponse {
    ProjectDocumentDetails details = 1;
}

message UpdateTaskRequest {
    int32 user_id = 1;
    string nanoid = 2;
    string changed_field = 3;
    string value = 4;
}

message UpdateTaskResponse {
    Task task = 1;
}

service UsersService {
    rpc CreateUser(CreateUserRequest) returns(CreateUserResponse);
    rpc Login(LoginRequest) returns(User);
    rpc GetUserById(GetUserByIdRequest) returns(User);
    rpc UpdateUserSettings(UserSettings) returns(UserSettings);
}

service WorkspacesService {
    rpc CreateWorkspace(CreateWorkspaceRequest) returns(CreateWorkspaceResponse);
    rpc GetWorkspacesByUserId(GetWorkspacesByUserIdRequest) returns(GetWorkspacesByUserIdResponse);
    rpc GetRoleIdOfUserWorkspaces(GetRoleIdOfUserWorkspacesRequest) returns(GetRoleIdOfUserWorkspacesResponse);
    rpc GetWorkspaceDetails(GetWorkspaceDetailsRequest) returns(GetWorkspaceDetailsResponse);
    rpc GetWorkspaceRoles(GetWorkspaceRolesRequest) returns(GetWorkspaceRolesResponse);
    rpc CreateCalendarEvent(CreateCalendarEventRequest) returns(CreateCalendarEventResponse);
    rpc CreateProject(CreateProjectRequest) returns(CreateProjectResponse);
    rpc GetProjectsByWorkspaceId(GetProjectsByWorkspaceIdRequest) returns(GetProjectsByWorkspaceIdResponse);
    rpc GetProjectDetails(GetProjectDetailsRequest) returns(GetProjectDetailsResponse);
    rpc GetPermissions(EmptyRequest) returns(GetPermissionsResponse);
    rpc UpdateRolePermission(UpdateRolePermissionRequest) returns(UpdateRolePermissionResponse);
    rpc GetUserRoleInWorkspace(GetUserRoleInWorkspaceRequest) returns(GetUserRoleInWorkspaceResponse);
    rpc CheckRoleValidForResource(CheckRoleValidForResourceRequest) returns(CheckRoleValidForResourceResponse);
    rpc CheckUserHasAccessToProject(CheckUserHasAccessToProjectRequest) returns(CheckRoleValidForResourceResponse);
    rpc CreateNewRole(CreateNewRoleRequest) returns(CreateNewRoleResponse);
    rpc GetWorkspaceMembers(GetWorkspaceMembersRequest) returns(GetWorkspaceMembersResponse);
    rpc CreateTask(CreateTaskRequest) returns(CreateTaskResponse);
    rpc UpdateTask(UpdateTaskRequest) returns(UpdateTaskResponse);
    rpc GetProjectTasks(GetProjectTasksRequest) returns(GetProjectTasksResponse);
    rpc CreateProjectDocument(CreateProjectDocumentRequest) returns(CreateProjectDocumentResponse);
    rpc GetProjectDocuments(GetProjectDocumentsRequest) returns(GetProjectDocumentsResponse);
    rpc GetProjectDocumentDetails(GetProjectDocumentDetailsRequest) returns(GetProjectDocumentDetailsResponse);
    rpc UpdateProjectDocumentDetails(UpdateProjectDocumentDetailsRequest) returns(UpdateProjectDocumentDetailsResponse);
}

service NotificationsService {  
    rpc CreateUserNotificationsSettings(UpsertUserNotificationsSettingsRequest) returns(UpsertUserNotificationsSettingsResponse);
    rpc UpdateUserNotificationsSettings(UpsertUserNotificationsSettingsRequest) returns(UpsertUserNotificationsSettingsResponse);
    rpc GetUserNotificationsSettings(GetUserNotificationsSettingsRequest) returns(GetUserNotificationsSettingsResponse);
}